{"ast":null,"code":"var _jsxFileName = \"/Users/emasterson 1/Desktop/mvp-cs5279/src/components/CalculatorControls.js\";\nimport React from 'react';\nconst localeOptions = {\n  style: 'currency',\n  currency: 'GBP',\n  minimumFractionDigits: 0,\n  maximumFractionDigits: 0\n};\nexport const CalculatorControls = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"grid__item--header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, parseInt(props.baseSalary)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"grid__item--range-slider\",\n    id: \"baseSalary\",\n    min: \"0\",\n    max: \"300000\",\n    step: \"1000\",\n    value: props.baseSalary,\n    onChange: event => props.setbaseSalary(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"grid__item--label\",\n    htmlFor: \"baseSalary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Base Salary\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"grid__item--header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, parseInt(props.bonusAmount)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"grid__item--range-slider\",\n    id: \"bonusAmount\",\n    min: \"0\",\n    max: \"150000\",\n    step: \"1000\",\n    value: props.bonusAmount,\n    onChange: event => props.setbonusAmount(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"grid__item--label\",\n    htmlFor: \"points\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, \"Bonus\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"grid__item--header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, parseInt(props.equityValue), \" \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"grid__item--range-slider\",\n    id: \"equityValue\",\n    min: \"0\",\n    max: \"100000\",\n    step: \"100\",\n    value: props.equityValue,\n    onChange: event => props.setequityValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"grid__item--label\",\n    htmlFor: \"equityValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, \"Annual Equity Value\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid__item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"grid__item--header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, props.perksValue, \"%\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"grid__item--range-slider\",\n    id: \"perksValue\",\n    min: \"0.1\",\n    max: \"8\",\n    step: \"0.1\",\n    value: props.perksValue,\n    onChange: event => props.setperksValue(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"grid__item--label\",\n    htmlFor: \"perksValue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, \"Interest Rate\")));\n};","map":{"version":3,"sources":["/Users/emasterson 1/Desktop/mvp-cs5279/src/components/CalculatorControls.js"],"names":["React","localeOptions","style","currency","minimumFractionDigits","maximumFractionDigits","CalculatorControls","props","parseInt","baseSalary","event","setbaseSalary","target","value","bonusAmount","setbonusAmount","equityValue","setequityValue","perksValue","setperksValue"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst localeOptions = {\n\tstyle:'currency',\n\tcurrency:'GBP',\n\tminimumFractionDigits: 0,\n    maximumFractionDigits: 0\n}\n\nexport const CalculatorControls = props => {\n\treturn(\n\t\t<div className=\"grid__container\">\t\t\t\n\t\t\t<div className=\"grid__item\">\n\t\t\t\t<span className=\"grid__item--header\">{parseInt(props.baseSalary)}</span>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tclassName=\"grid__item--range-slider\"\n\t\t\t\t\tid=\"baseSalary\"  \n\t\t\t\t\tmin=\"0\" \n\t\t\t\t\tmax=\"300000\" \n\t\t\t\t\tstep=\"1000\" \n\t\t\t\t\tvalue={props.baseSalary} \n\t\t\t\t\tonChange={(event) => \n\t\t\t\t\t\tprops.setbaseSalary(event.target.value)\n\t\t\t\t\t} />\n\t\t\t\t<label className=\"grid__item--label\" htmlFor=\"baseSalary\">Base Salary</label>\n\t\t\t</div>\n\t\t\t<div className=\"grid__item\">\n\t\t\t\t<span className=\"grid__item--header\">{parseInt(props.bonusAmount)}</span>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tclassName=\"grid__item--range-slider\"\n\t\t\t\t\tid=\"bonusAmount\" \n\t\t\t\t\tmin=\"0\" \n\t\t\t\t\tmax=\"150000\" \n\t\t\t\t\tstep=\"1000\" \n\t\t\t\t\tvalue={props.bonusAmount}\n         \t\t\tonChange={(event) =>\n\t\t\t\t\t\tprops.setbonusAmount(event.target.value)\n         \t\t\t} />\n\t\t\t\t<label className=\"grid__item--label\" htmlFor=\"points\">Bonus</label>\n\t\t\t</div>\n\t\t\t<div className=\"grid__item\">\n\t\t\t\t<span className=\"grid__item--header\">{parseInt(props.equityValue)} </span>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tclassName=\"grid__item--range-slider\"\n\t\t\t\t\tid=\"equityValue\"  \n\t\t\t\t\tmin=\"0\" \n\t\t\t\t\tmax=\"100000\" \n\t\t\t\t\tstep=\"100\" \n\t\t\t\t\tvalue={props.equityValue} \n\t\t\t\t\tonChange={(event) => \n\t\t\t\t\t\tprops.setequityValue(event.target.value)\n\t\t\t\t\t} />\n\t\t\t\t<label className=\"grid__item--label\" htmlFor=\"equityValue\">Annual Equity Value</label>\n\t\t\t</div>\n\t\t\t<div className=\"grid__item\">\n\t\t\t\t<span className=\"grid__item--header\">{props.perksValue}%</span>\n\t\t\t\t<input \n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tclassName=\"grid__item--range-slider\"\n\t\t\t\t\tid=\"perksValue\"  \n\t\t\t\t\tmin=\"0.1\" \n\t\t\t\t\tmax=\"8\" \n\t\t\t\t\tstep=\"0.1\" \n\t\t\t\t\tvalue={props.perksValue} \n\t\t\t\t\tonChange={(event) => \n\t\t\t\t\t\tprops.setperksValue(event.target.value)\n\t\t\t\t\t} />\n\t\t\t\t<label className=\"grid__item--label\" htmlFor=\"perksValue\">Interest Rate</label>\n\t\t\t</div>\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}