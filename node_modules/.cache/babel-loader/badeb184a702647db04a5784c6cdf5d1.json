{"ast":null,"code":"var _jsxFileName = \"/Users/emasterson 1/Desktop/mortgage-payment-calculator/src/components/PaymentGraph.js\";\nimport React from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nconst graphData = {\n  labels: [],\n  datasets: [{\n    label: 'Mortgage Balance',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(0,140,255,0.4)',\n    borderColor: 'rgba(0,140,255,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(0,140,255,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(0,140,255,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: []\n  }, {\n    label: 'Interest Paid',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(249,31,116,0.4)',\n    borderColor: 'rgba(249,31,116,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(249,31,116,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(249,31,116,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: []\n  }, {\n    label: 'Principal Repaid',\n    fill: false,\n    lineTension: 0.1,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75,192,192,1)',\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderJoinStyle: 'miter',\n    pointBorderColor: 'rgba(75,192,192,1)',\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\n    pointHoverBorderWidth: 2,\n    pointRadius: 1,\n    pointHitRadius: 10,\n    data: []\n  }]\n};\nconst graphOption = {\n  scales: {\n    yAxes: [{\n      ticks: {\n        callback: function (value, index, values) {\n          if (value === 0) {\n            return value;\n          }\n\n          return 'Â£' + value / 1000 + 'K';\n        }\n      }\n    }]\n  },\n  legend: {\n    position: 'bottom'\n  },\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItems, data, index) {\n        return parseFloat(tooltipItems.value).toLocaleString('en-GB', {\n          style: 'currency',\n          currency: 'GBP'\n        }) + ' ' + data.datasets[tooltipItems.datasetIndex].label;\n      }\n    }\n  }\n};\nconst barGraphData = {\n  datasets: [{\n    label: 'Principal Repaid',\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    data: []\n  }, {\n    label: 'Interest Paid',\n    backgroundColor: 'rgba(249,31,116,0.4)',\n    data: []\n  }],\n  labels: []\n};\nexport const PaymentGraph = props => {\n  graphData.labels = [];\n  graphData.datasets[0].data = [];\n  graphData.datasets[1].data = [];\n  graphData.datasets[2].data = [];\n  barGraphData.labels = [];\n  barGraphData.datasets[0].data = [];\n  barGraphData.datasets[1].data = [];\n\n  for (let i = 0; i <= props.mortgageTerm; i++) {\n    graphData.labels.push('Year ' + i);\n    graphData.datasets[0].data.push(props.yearlyPayments[i].outstandingBalance);\n    graphData.datasets[1].data.push(props.yearlyPayments[i].interestPaidToDate);\n    graphData.datasets[2].data.push(props.yearlyPayments[i].principalRepaidToDate);\n\n    if (i > 0) {\n      //Stops year 0 with no money paid from appearing on bar chart\n      barGraphData.labels.push('Year ' + i);\n      barGraphData.datasets[0].data.push(props.yearlyPayments[i].principalRepaid);\n      barGraphData.datasets[1].data.push(props.yearlyPayments[i].interestPaid);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    data: graphData,\n    options: graphOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"graph-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: barGraphData,\n    options: graphOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 8\n    }\n  })));\n};","map":{"version":3,"sources":["/Users/emasterson 1/Desktop/mortgage-payment-calculator/src/components/PaymentGraph.js"],"names":["React","Line","Bar","graphData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","graphOption","scales","yAxes","ticks","callback","value","index","values","legend","position","tooltips","callbacks","tooltipItems","parseFloat","toLocaleString","style","currency","datasetIndex","barGraphData","PaymentGraph","props","i","mortgageTerm","push","yearlyPayments","outstandingBalance","interestPaidToDate","principalRepaidToDate","principalRepaid","interestPaid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Line, Bar} from 'react-chartjs-2';\n\nconst graphData = {\n  labels: [],\n  datasets: [{\n    \tlabel: 'Mortgage Balance',\n    \tfill: false,\n    \tlineTension: 0.1,\n    \tbackgroundColor: 'rgba(0,140,255,0.4)',\n    \tborderColor: 'rgba(0,140,255,1)',\n    \tborderCapStyle: 'butt',\n    \tborderDash: [],\n    \tborderDashOffset: 0.0,\n    \tborderJoinStyle: 'miter',\n    \tpointBorderColor: 'rgba(0,140,255,1)',\n    \tpointBackgroundColor: '#fff',\n    \tpointBorderWidth: 1,\n    \tpointHoverRadius: 5,\n    \tpointHoverBackgroundColor: 'rgba(0,140,255,1)',\n    \tpointHoverBorderColor: 'rgba(220,220,220,1)',\n    \tpointHoverBorderWidth: 2,\n    \tpointRadius: 1,\n    \tpointHitRadius: 10,\n    \tdata: []\n    },\n    {\n    \tlabel: 'Interest Paid',\n    \tfill: false,\n    \tlineTension: 0.1,\n    \tbackgroundColor: 'rgba(249,31,116,0.4)',\n    \tborderColor: 'rgba(249,31,116,1)',\n    \tborderCapStyle: 'butt',\n    \tborderDash: [],\n    \tborderDashOffset: 0.0,\n    \tborderJoinStyle: 'miter',\n    \tpointBorderColor: 'rgba(249,31,116,1)',\n    \tpointBackgroundColor: '#fff',\n    \tpointBorderWidth: 1,\n    \tpointHoverRadius: 5,\n    \tpointHoverBackgroundColor: 'rgba(249,31,116,1)',\n    \tpointHoverBorderColor: 'rgba(220,220,220,1)',\n    \tpointHoverBorderWidth: 2,\n    \tpointRadius: 1,\n    \tpointHitRadius: 10,\n    \tdata: []\n    },\n    {\n    \tlabel: 'Principal Repaid',\n    \tfill: false,\n    \tlineTension: 0.1,\n    \tbackgroundColor: 'rgba(75,192,192,0.4)',\n    \tborderColor: 'rgba(75,192,192,1)',\n    \tborderCapStyle: 'butt',\n    \tborderDash: [],\n    \tborderDashOffset: 0.0,\n    \tborderJoinStyle: 'miter',\n    \tpointBorderColor: 'rgba(75,192,192,1)',\n    \tpointBackgroundColor: '#fff',\n    \tpointBorderWidth: 1,\n    \tpointHoverRadius: 5,\n    \tpointHoverBackgroundColor: 'rgba(75,192,192,1)',\n    \tpointHoverBorderColor: 'rgba(220,220,220,1)',\n    \tpointHoverBorderWidth: 2,\n    \tpointRadius: 1,\n    \tpointHitRadius: 10,\n    \tdata: []\n    }\n  ]\n};\nconst graphOption = {\n\tscales: {\n       \tyAxes: [{\n        \tticks: {\n           \t\tcallback: function(value, index, values) {\n           \t\t\tif (value === 0) {\n           \t\t\t\treturn value;\n           \t\t\t}\n           \t\t\treturn 'Â£' + (value / 1000) + 'K';\n             \t\t\n           \t\t}\n         \t}\n       \t}]\n    },\n    legend: {\n    \tposition: 'bottom'\n    },\n    tooltips: {\n    \tcallbacks: {\n        \tlabel: function(tooltipItems, data, index) {\n            \treturn parseFloat(tooltipItems.value).toLocaleString('en-GB', {style:'currency', currency:'GBP'}) + ' ' + data.datasets[tooltipItems.datasetIndex].label;\n        \t}\n    \t}\n    }\n}\n\nconst barGraphData = {\n    \tdatasets: [{\n    \t\tlabel: 'Principal Repaid',\n    \t\tbackgroundColor: 'rgba(75,192,192,0.4)',\n        \tdata: []\n    \t},\n    \t{\n    \t\tlabel: 'Interest Paid',\n    \t\tbackgroundColor: 'rgba(249,31,116,0.4)',\n        \tdata: []\n    \t}],\n    \tlabels: []\n}\n\nexport const PaymentGraph = props => {\n\tgraphData.labels = [];\n\tgraphData.datasets[0].data = [];\n\tgraphData.datasets[1].data = [];\n\tgraphData.datasets[2].data = [];\n\tbarGraphData.labels = [];\n\tbarGraphData.datasets[0].data = [];\n\tbarGraphData.datasets[1].data = [];\n  \tfor(let i = 0; i <= props.mortgageTerm; i++) {\n\t\tgraphData.labels.push('Year '+ i);\n\t\tgraphData.datasets[0].data.push(props.yearlyPayments[i].outstandingBalance);\n\t\tgraphData.datasets[1].data.push(props.yearlyPayments[i].interestPaidToDate);\n\t\tgraphData.datasets[2].data.push(props.yearlyPayments[i].principalRepaidToDate);\n\t\tif (i > 0) { //Stops year 0 with no money paid from appearing on bar chart\n\t\t\tbarGraphData.labels.push('Year '+ i);\n\t\t\tbarGraphData.datasets[0].data.push(props.yearlyPayments[i].principalRepaid);\n\t\t\tbarGraphData.datasets[1].data.push(props.yearlyPayments[i].interestPaid);\n\t\t}\n\t}\n    return(\n    \t<div>\n    \t\t<div className=\"graph-container\">\n    \t\t\t<Line \n    \t\t\t\tdata={graphData}\n    \t\t\t\toptions={graphOption}\n    \t\t\t/>\n    \t\t</div>\n    \t\t<div className=\"graph-container\">\n    \t\t\t<Bar \n    \t\t\t\tdata={barGraphData}\n    \t\t\t\toptions={graphOption}\n    \t\t\t/>\n    \t\t</div>\n    \t</div>\n    )\n}"]},"metadata":{},"sourceType":"module"}