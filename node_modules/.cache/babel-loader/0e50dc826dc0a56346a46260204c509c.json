{"ast":null,"code":"var _jsxFileName = \"/Users/emasterson 1/Desktop/mvp-cs5279/src/components/Calculator.js\";\nimport React, { useState } from 'react';\nimport { HeaderFigures } from './HeaderFigures';\nimport { CalculatorControls } from './CalculatorControls';\nimport { handleMortgageDataChange } from './utils';\nexport const Calculator = () => {\n  const [depositAmount, setDepositAmount] = useState(72000);\n  const [baseSalary, setbaseSalary] = useState(285000);\n  const [mortgageTerm, setMortgageTerm] = useState(25);\n  const [interestRate, setInterestRate] = useState(1.8); //Set initial values for the whole mortgage term\n\n  const amountToBorrow = baseSalary - depositAmount;\n  const monthlyPayment = interestRate / 100 / 12 * amountToBorrow / (1 - Math.pow(1 + interestRate / 100 / 12, (0 - mortgageTerm) * 12));\n  const totalRepaid = monthlyPayment * 12 * mortgageTerm;\n  const totalInterestPaid = totalRepaid - amountToBorrow;\n  const yearlyPayments = handleMortgageDataChange(amountToBorrow, mortgageTerm, interestRate, monthlyPayment);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HeaderFigures, {\n    amountToBorrow: amountToBorrow,\n    monthlyPayment: monthlyPayment,\n    totalRepaid: totalRepaid,\n    totalInterestPaid: totalInterestPaid,\n    depositAmount: depositAmount,\n    baseSalary: baseSalary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CalculatorControls, {\n    depositAmount: depositAmount,\n    setDepositAmount: setDepositAmount,\n    baseSalary: baseSalary,\n    setbaseSalary: setbaseSalary,\n    mortgageTerm: mortgageTerm,\n    setMortgageTerm: setMortgageTerm,\n    interestRate: interestRate,\n    setInterestRate: setInterestRate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/emasterson 1/Desktop/mvp-cs5279/src/components/Calculator.js"],"names":["React","useState","HeaderFigures","CalculatorControls","handleMortgageDataChange","Calculator","depositAmount","setDepositAmount","baseSalary","setbaseSalary","mortgageTerm","setMortgageTerm","interestRate","setInterestRate","amountToBorrow","monthlyPayment","Math","pow","totalRepaid","totalInterestPaid","yearlyPayments"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,kBAAR,QAAiC,sBAAjC;AACA,SAASC,wBAAT,QAAyC,SAAzC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC/B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,MAAD,CAA5C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACW,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,GAAD,CAAhD,CAJ+B,CAM/B;;AACA,QAAMa,cAAc,GAAGN,UAAU,GAAGF,aAApC;AACA,QAAMS,cAAc,GAAKH,YAAY,GAAG,GAAf,GAAqB,EAAtB,GAA4BE,cAA7B,IAAgD,IAAKE,IAAI,CAACC,GAAL,CAAU,IAAKL,YAAY,GAAG,GAAf,GAAqB,EAApC,EAA0C,CAAC,IAAIF,YAAL,IAAqB,EAA/D,CAArD,CAAvB;AACA,QAAMQ,WAAW,GAAGH,cAAc,GAAG,EAAjB,GAAsBL,YAA1C;AACA,QAAMS,iBAAiB,GAAGD,WAAW,GAAGJ,cAAxC;AAEA,QAAMM,cAAc,GAAGhB,wBAAwB,CAACU,cAAD,EAAiBJ,YAAjB,EAA+BE,YAA/B,EAA6CG,cAA7C,CAA/C;AAEA,sBACC,uDACC,oBAAC,aAAD;AACC,IAAA,cAAc,EAAED,cADjB;AAEC,IAAA,cAAc,EAAEC,cAFjB;AAGC,IAAA,WAAW,EAAEG,WAHd;AAIC,IAAA,iBAAiB,EAAEC,iBAJpB;AAKC,IAAA,aAAa,EAAEb,aALhB;AAMC,IAAA,UAAU,EAAEE,UANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eASC,oBAAC,kBAAD;AACC,IAAA,aAAa,EAAEF,aADhB;AAEC,IAAA,gBAAgB,EAAEC,gBAFnB;AAGC,IAAA,UAAU,EAAEC,UAHb;AAIC,IAAA,aAAa,EAAEC,aAJhB;AAKC,IAAA,YAAY,EAAEC,YALf;AAMC,IAAA,eAAe,EAAEC,eANlB;AAOC,IAAA,YAAY,EAAEC,YAPf;AAQC,IAAA,eAAe,EAAEC,eARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATD,CADD;AAuBA,CArCM","sourcesContent":["import React, {useState} from 'react';\nimport {HeaderFigures} from './HeaderFigures';\nimport {CalculatorControls} from './CalculatorControls';\nimport { handleMortgageDataChange } from './utils';\n\nexport const Calculator = () => {\n\tconst [depositAmount, setDepositAmount] = useState(72000);\n\tconst [baseSalary, setbaseSalary] = useState(285000);\n\tconst [mortgageTerm, setMortgageTerm] = useState(25);\n\tconst [interestRate, setInterestRate] = useState(1.8);\n\n\t//Set initial values for the whole mortgage term\n\tconst amountToBorrow = baseSalary - depositAmount;\n\tconst monthlyPayment = ((interestRate / 100 / 12) * amountToBorrow) / (1 - (Math.pow((1 + (interestRate / 100 / 12)),((0 - mortgageTerm) * 12))));\n\tconst totalRepaid = monthlyPayment * 12 * mortgageTerm;\n\tconst totalInterestPaid = totalRepaid - amountToBorrow;\n\n\tconst yearlyPayments = handleMortgageDataChange(amountToBorrow, mortgageTerm, interestRate, monthlyPayment);\n\n\treturn(\n\t\t<>\n\t\t\t<HeaderFigures \n\t\t\t\tamountToBorrow={amountToBorrow}\n\t\t\t\tmonthlyPayment={monthlyPayment}\n\t\t\t\ttotalRepaid={totalRepaid}\n\t\t\t\ttotalInterestPaid={totalInterestPaid}\n\t\t\t\tdepositAmount={depositAmount}\n\t\t\t\tbaseSalary={baseSalary}\n\t\t\t/>\n\t\t\t<CalculatorControls \n\t\t\t\tdepositAmount={depositAmount}\n\t\t\t\tsetDepositAmount={setDepositAmount}\n\t\t\t\tbaseSalary={baseSalary}\n\t\t\t\tsetbaseSalary={setbaseSalary}\n\t\t\t\tmortgageTerm={mortgageTerm}\n\t\t\t\tsetMortgageTerm={setMortgageTerm}\n\t\t\t\tinterestRate={interestRate}\n\t\t\t\tsetInterestRate={setInterestRate}\n\t\t\t/>\n\t\t</>\n\t);\n\n}"]},"metadata":{},"sourceType":"module"}